{"version":3,"sources":["hooks/usePageTitle.tsx","components/designsystem/TitledSurface.tsx","components/designsystem/SmallInput.tsx","components/designsystem/Select.tsx","components/designsystem/DefaultPageColumn.ts","hooks/useSupertags.ts","components/designsystem/Setting.tsx","components/widgets/SignIn.tsx","components/preferences/PrefAccount.tsx","components/preferences/PrefAutoPlay.tsx","components/preferences/PrefAutoscrollDelay.tsx","components/preferences/PrefHideSeenPosts.tsx","components/preferences/PrefLoadOriginals.tsx","components/preferences/PrefMetadata.tsx","components/preferences/PrefPageSize.tsx","components/preferences/PrefPreloadVideos.tsx","components/preferences/PrefResultsLayout.tsx","components/preferences/PrefShowComments.tsx","components/designsystem/SupertagEntry.tsx","hooks/useSupertag.tsx","components/preferences/PrefSupertags.tsx","components/preferences/PrefTagSuggestions.tsx","components/preferences/PrefTheme.tsx","components/designsystem/StatusImage.tsx","components/widgets/FeatureDetection.tsx","components/widgets/ResetResultsButton.tsx","components/widgets/ResetSeenPostsButton.tsx","components/pages/Preferences.tsx"],"names":["usePageTitle","title","React","useEffect","document","PaddedTitle","styled","Title","theme","css","dimensions","hugeSpacing","PaddedSurface","Surface","$compact","bigSpacing","gap","TitledSurface","props","children","className","compact","StyledInput","input","defaultInput","SmallNumberInput","value","onSubmit","min","max","step","useState","toString","internalValue","setInternalValue","onChange","useCallback","event","target","onBlur","Number","blurOnEnter","key","blur","type","onKeyDown","Wrapper","div","blockHeight","StyledSelect","select","Option","option","defaultBorder","colors","backgroundColor2","defaultBlock","Select","options","Object","entries","map","optionKey","optionValue","DefaultPageColumn","FlexColumnWithSpacing","centeredMaxWidth","useSupertags","supertags","setSupertags","collection","setCollection","useFirebaseAuthState","userInfo","email","sha256","then","hash","col","firebase","firestore","get","snapshot","result","docs","reduce","doc","id","data","catch","err","console","error","unsubscribe","onSnapshot","Grid","gridWithGap","SmallTitle","Body","Faded","Control","Setting","description","FlexRow","flexRowWithGap","ProfilePicture","img","borderRadius","SignIn","isSignedIn","user","handleSignIn","signIn","handleSignOut","signOut","name","displayName","picture","photoURL","FlexColumn","src","alt","onClick","PrefAccount","PrefAutoPlay","usePreference","autoPlay","setAutoPlay","toggleAutoPlay","Toggle","onToggle","PrefAutoscrollDelay","autoscrollDelay","setAutoscrollDelay","PrefHideSeenPosts","hideSeen","setHideSeen","toggleHideSeen","PrefLoadOriginals","originals","setOriginals","toggleOriginals","PrefMetadata","showMetadata","setShowMetadata","toggleShowMetadata","PrefPageSize","pageSize","setPageSize","PrefPreloadVideos","preloadVideos","setPreloadVideos","togglePreloadVideos","layouts","infinite_column","pages","PrefResultsLayout","resultsLayout","setResultsLayout","onChangeResultsLayout","PrefShowComments","showComments","setShowComments","toggleShowComments","flexColumnWithGap","layerBgHighlight","Row","LinkButton","Link","text","SupertagEntry","supertag","tags","useToggle","isOpen","toggleOpen","newTag","tag","newTags","modifier","setTagsOfSupertag","removeSupertag","useSupertag","addTag","removeTag","deleteSupertag","tagObjects","useMemo","types","handleRemove","stopPropagation","preventDefault","onTagMenu","isSupertag","order","nextModifer","indexOf","keys","length","to","RouteName","SHARE","encodeSupertag","TagSelector","showSupertags","TagList","detailed","onTagClick","PrefSupertags","dispatch","useDispatch","openSupertagModal","openModal","ModalId","CREATE_SUPERTAG","details","PrefTagSuggestions","tagSuggestionsCount","setTagSuggestionsCount","themes","dark","light","coffee","deepsea","PrefTheme","themeId","setThemeId","changeTheme","Positive","SuccessIcon","attrs","color","positive","Negative","FailedIcon","negative","StatusImage","FeatureList","defaultSpacing","backgroundColor","FeatureDetection","supportsGap","supportsFlexGap","supportsAspectRatio","supportsObjectFit","supportsFullscreen","supportsNetworkInformationAPI","supportsLocalStorage","ResetResultsButton","handleClick","setPosts","ResetSeenPostsButton","onResetSeenPosts","resetSeenPosts","VersionWrapper","Preferences","useTheme","versionString","getVersionString","Header","ResetButton","subduedText"],"mappings":"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","file":"static/js/6.b76618eb.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n/**\r\n * Effect that sets the title of the page to a specified string.\r\n * Really small utility hook that saves a few lines.\r\n */\r\nexport function usePageTitle(title: string) {\r\n  React.useEffect(() => {\r\n    document.title = title\r\n  }, [title])\r\n}\r\n","import React from 'react'\r\nimport styled, { css, DefaultTheme } from 'styled-components'\r\nimport { gap } from '../../styled/mixins/gap'\r\nimport { Surface } from './Surface'\r\nimport { Title } from './Text'\r\n\r\nconst PaddedTitle = styled(Title)(\r\n  ({ theme }) => css`\r\n    padding-top: ${theme.dimensions.hugeSpacing};\r\n  `\r\n)\r\n\r\nconst PaddedSurface = styled(Surface)(\r\n  ({ theme, $compact }: { theme: DefaultTheme; $compact: boolean }) => css`\r\n    padding: ${$compact ? theme.dimensions.bigSpacing : theme.dimensions.hugeSpacing};\r\n    ${gap($compact ? theme.dimensions.bigSpacing : theme.dimensions.hugeSpacing)};\r\n  `\r\n)\r\n\r\ninterface TitledSurfaceProps {\r\n  title: React.ReactNode\r\n  children: React.ReactNode[]\r\n  compact?: boolean\r\n  className?: string\r\n}\r\n\r\nexport default function TitledSurface(props: TitledSurfaceProps) {\r\n  const { title, children, className, compact = false } = props\r\n\r\n  return (\r\n    <>\r\n      <PaddedTitle>{title}</PaddedTitle>\r\n      <PaddedSurface $compact={compact} className={className}>\r\n        {children}\r\n      </PaddedSurface>\r\n    </>\r\n  )\r\n}\r\n","import React, { ChangeEventHandler, useCallback, useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { defaultInput } from '../../styled/mixins/theming'\r\n\r\nconst StyledInput = styled.input`\r\n  ${defaultInput}\r\n\r\n  width: 70px;\r\n  text-align: left;\r\n`\r\n\r\ninterface SmallTextInputProps {\r\n  value: string\r\n  onSubmit: (value: string) => void\r\n  className?: string\r\n}\r\n\r\ninterface SmallNumberInputProps {\r\n  value: number\r\n  onSubmit: (value: number) => void\r\n  min?: number\r\n  max?: number\r\n  step?: number\r\n  className?: string\r\n}\r\n\r\nexport function SmallTextInput(props: SmallTextInputProps) {\r\n  const { value, onSubmit, className } = props\r\n  const [internalValue, setInternalValue] = useState(value)\r\n\r\n  useEffect(() => {\r\n    setInternalValue(value)\r\n  }, [value])\r\n\r\n  const onChange: ChangeEventHandler<HTMLInputElement> = useCallback((event) => {\r\n    setInternalValue(event.target.value)\r\n  }, [])\r\n\r\n  const onBlur = useCallback(() => {\r\n    onSubmit(internalValue)\r\n  }, [internalValue, onSubmit])\r\n\r\n  const blurOnEnter = useCallback((event) => {\r\n    if (event.key === 'Enter') {\r\n      event.target.blur()\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <StyledInput\r\n      type='text'\r\n      value={internalValue}\r\n      onChange={onChange}\r\n      onBlur={onBlur}\r\n      onKeyDown={blurOnEnter}\r\n      className={className}\r\n    />\r\n  )\r\n}\r\n\r\nexport function SmallNumberInput(props: SmallNumberInputProps) {\r\n  const { value, onSubmit, className, min, max, step } = props\r\n  const [internalValue, setInternalValue] = useState(value.toString())\r\n\r\n  useEffect(() => {\r\n    setInternalValue(value.toString())\r\n  }, [value])\r\n\r\n  const onChange: ChangeEventHandler<HTMLInputElement> = useCallback((event) => {\r\n    setInternalValue(event.target.value)\r\n  }, [])\r\n\r\n  const onBlur = useCallback(() => {\r\n    onSubmit(Number(internalValue))\r\n  }, [internalValue, onSubmit])\r\n\r\n  const blurOnEnter = useCallback((event) => {\r\n    if (event.key === 'Enter') {\r\n      event.target.blur()\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <StyledInput\r\n      type='number'\r\n      min={min}\r\n      max={max}\r\n      step={step}\r\n      value={internalValue}\r\n      onChange={onChange}\r\n      onBlur={onBlur}\r\n      onKeyDown={blurOnEnter}\r\n      className={className}\r\n    />\r\n  )\r\n}\r\n","import React, { ChangeEventHandler } from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport { defaultBlock } from '../../styled/mixins/layout'\r\nimport { defaultBorder, defaultInput } from '../../styled/mixins/theming'\r\n\r\nconst Wrapper = styled.div(\r\n  ({ theme }) => css`\r\n    width: 120px;\r\n    height: ${theme.dimensions.blockHeight};\r\n  `\r\n)\r\n\r\nconst StyledSelect = styled.select`\r\n  ${defaultInput}\r\n\r\n  width: 100%;\r\n  height: 100%;\r\n`\r\n\r\nconst Option = styled.option(\r\n  ({ theme }) => css`\r\n    ${defaultBorder({ theme })}\r\n    background-color: ${theme.colors.backgroundColor2};\r\n    ${defaultBlock({ theme })}\r\n  `\r\n)\r\n\r\ninterface SelectProps {\r\n  options: Record<string, string>\r\n  value: string\r\n  onChange: ChangeEventHandler\r\n}\r\n\r\nexport default function Select(props: SelectProps) {\r\n  const { options, value, onChange } = props\r\n\r\n  return (\r\n    <Wrapper>\r\n      <StyledSelect value={value} onChange={onChange}>\r\n        {Object.entries(options).map(([optionKey, optionValue]) => (\r\n          <Option key={optionKey} value={optionKey}>\r\n            {optionValue}\r\n          </Option>\r\n        ))}\r\n      </StyledSelect>\r\n    </Wrapper>\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\nimport { centeredMaxWidth } from '../../styled/mixins/layout'\r\nimport { FlexColumnWithSpacing } from './FlexColumn'\r\n\r\nexport const DefaultPageColumn = styled(FlexColumnWithSpacing)`\r\n  ${centeredMaxWidth}\r\n  flex-grow: 1;\r\n`\r\n","import React from 'react'\r\nimport firebase from 'firebase'\r\nimport * as r34 from 'r34-types'\r\nimport useFirebaseAuthState from './useFirebaseAuthState'\r\nimport { sha256 } from '../data/encryption'\r\n\r\nexport function useSupertags() {\r\n  const [supertags, setSupertags] = React.useState<Record<string, r34.SupertagData>>({})\r\n  const [collection, setCollection] = React.useState<firebase.firestore.CollectionReference>()\r\n\r\n  const [, userInfo] = useFirebaseAuthState()\r\n\r\n  React.useEffect(() => {\r\n    if (userInfo?.email) {\r\n      sha256(userInfo.email)\r\n        .then((hash) => {\r\n          const col = firebase.firestore().collection(`users/${hash}/supertags`)\r\n          setCollection(col)\r\n          return col.get()\r\n        })\r\n        .then((snapshot) => {\r\n          const result = snapshot.docs.reduce((result, doc) => {\r\n            result[doc.id] = doc.data() as r34.SupertagData\r\n            return result\r\n          }, {} as Record<string, r34.SupertagData>)\r\n\r\n          setSupertags(result)\r\n        })\r\n        .catch((err) => {\r\n          console.error('Error with useSupertags', err)\r\n        })\r\n    }\r\n  }, [userInfo?.email])\r\n\r\n  React.useEffect(() => {\r\n    if (collection) {\r\n      const unsubscribe = collection.onSnapshot((snapshot) => {\r\n        const result = snapshot.docs.reduce((result, doc) => {\r\n          const userSupertags = doc\r\n          result[userSupertags.id] = doc.data() as r34.SupertagData\r\n          return result\r\n        }, {} as Record<string, r34.SupertagData>)\r\n\r\n        setSupertags(result)\r\n      })\r\n\r\n      return () => {\r\n        unsubscribe()\r\n      }\r\n    }\r\n  }, [collection])\r\n\r\n  return supertags\r\n}\r\n","import React from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport { gridWithGap } from '../../styled/mixins/layout'\r\nimport { SmallTitle, Faded } from './Text'\r\n\r\nconst Grid = styled.div`\r\n  ${gridWithGap}\r\n  grid-template-columns: 1fr auto;\r\n  grid-template-rows: auto auto;\r\n`\r\n\r\nconst Title = styled(SmallTitle)(\r\n  ({ theme }) => css`\r\n    grid-column: 1/2;\r\n    grid-row: 1/2;\r\n  `\r\n)\r\n\r\nconst Body = styled(Faded)(\r\n  ({ theme }) => css`\r\n    grid-column: 1/2;\r\n    grid-row: 2/3;\r\n  `\r\n)\r\n\r\nconst Control = styled.div(\r\n  ({ theme }) => css`\r\n    grid-column: 2/3;\r\n    grid-row: 1/3;\r\n  `\r\n)\r\n\r\ninterface SettingProps {\r\n  title: string\r\n  description: string\r\n  children: React.ReactNode\r\n}\r\n\r\nexport default function Setting({ title, description, children }: SettingProps) {\r\n  return (\r\n    <Grid>\r\n      <Title>{title}</Title>\r\n      <Body>{description}</Body>\r\n      <Control>{children}</Control>\r\n    </Grid>\r\n  )\r\n}\r\n","import { useCallback } from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport { signIn, signOut } from '../../firebase'\r\nimport useFirebaseAuthState from '../../hooks/useFirebaseAuthState'\r\nimport { GoogleIcon, SignOutIcon } from '../../icons/FontAwesomeIcons'\r\nimport { flexRowWithGap } from '../../styled/mixins/layout'\r\nimport { PrimaryButton } from '../designsystem/Buttons'\r\nimport { FlexColumn } from '../designsystem/FlexColumn'\r\n\r\nconst FlexRow = styled.div`\r\n  ${flexRowWithGap}\r\n`\r\n\r\nconst ProfilePicture = styled.img(\r\n  ({ theme }) => css`\r\n    height: ${theme.dimensions.blockHeight};\r\n    width: ${theme.dimensions.blockHeight};\r\n    border-radius: ${theme.dimensions.borderRadius};\r\n  `\r\n)\r\n\r\nexport default function SignIn() {\r\n  const [isSignedIn, user] = useFirebaseAuthState()\r\n  const handleSignIn = useCallback(signIn, [])\r\n  const handleSignOut = useCallback(signOut, [])\r\n\r\n  if (isSignedIn) {\r\n    const name = user?.displayName || user?.email || ''\r\n    const picture = user?.photoURL || ''\r\n\r\n    return (\r\n      <FlexColumn>\r\n        <FlexRow>\r\n          <ProfilePicture src={picture} alt={name} title={name} />\r\n          <PrimaryButton onClick={handleSignOut}>\r\n            <SignOutIcon />\r\n            <span>Sign Out</span>\r\n          </PrimaryButton>\r\n        </FlexRow>\r\n      </FlexColumn>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <PrimaryButton onClick={handleSignIn}>\r\n      <GoogleIcon />\r\n      <span>Sign In</span>\r\n    </PrimaryButton>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Setting from '../designsystem/Setting'\r\nimport SignIn from '../widgets/SignIn'\r\n\r\nexport default function PrefAccount() {\r\n  return (\r\n    <Setting\r\n      title='Account'\r\n      description='Sign in to save your preferences across devices. Some preferences require you to be signed in because they use your stored data.'\r\n    >\r\n      <SignIn />\r\n    </Setting>\r\n  )\r\n}\r\n","import React, { useCallback } from 'react'\r\nimport usePreference from '../../hooks/usePreference'\r\nimport Setting from '../designsystem/Setting'\r\nimport Toggle from '../designsystem/Toggle'\r\n\r\nexport default function PrefAutoPlay() {\r\n  const [autoPlay, setAutoPlay] = usePreference('autoPlay')\r\n  const toggleAutoPlay = useCallback(() => setAutoPlay(!autoPlay), [autoPlay, setAutoPlay])\r\n\r\n  return (\r\n    <Setting\r\n      title='Auto-play'\r\n      description='Start videos automatically once they become visible. This will use more data.'\r\n    >\r\n      <Toggle value={autoPlay} onToggle={toggleAutoPlay} />\r\n    </Setting>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport usePreference from '../../hooks/usePreference'\r\nimport Setting from '../designsystem/Setting'\r\nimport { SmallNumberInput } from '../designsystem/SmallInput'\r\n\r\nexport default function PrefAutoscrollDelay() {\r\n  const [autoscrollDelay, setAutoscrollDelay] = usePreference('autoscrollDelay')\r\n\r\n  return (\r\n    <Setting\r\n      title='Autosroll delay'\r\n      description='Configure how long posts stay on screen in fullscreen view. Time in seconds'\r\n    >\r\n      <SmallNumberInput value={autoscrollDelay} onSubmit={setAutoscrollDelay} min={1} max={60} step={1} />\r\n    </Setting>\r\n  )\r\n}\r\n","import React, { useCallback } from 'react'\r\nimport usePreference from '../../hooks/usePreference'\r\nimport Setting from '../designsystem/Setting'\r\nimport Toggle from '../designsystem/Toggle'\r\n\r\nexport default function PrefHideSeenPosts() {\r\n  const [hideSeen, setHideSeen] = usePreference('hideSeen')\r\n  const toggleHideSeen = useCallback(() => setHideSeen(!hideSeen), [hideSeen, setHideSeen])\r\n\r\n  return (\r\n    <Setting\r\n      title='Hide seen posts [NOT WORKING]'\r\n      description='Enabling this option will hide all posts you have seen before. Perfect if you are frequently browsing the same tags or sorting by score.'\r\n    >\r\n      <Toggle value={hideSeen} onToggle={toggleHideSeen} />\r\n    </Setting>\r\n  )\r\n}\r\n","import React, { useCallback } from 'react'\r\nimport usePreference from '../../hooks/usePreference'\r\nimport Setting from '../designsystem/Setting'\r\nimport Toggle from '../designsystem/Toggle'\r\n\r\nexport default function PrefLoadOriginals() {\r\n  const [originals, setOriginals] = usePreference('originals')\r\n  const toggleOriginals = useCallback(() => setOriginals(!originals), [originals, setOriginals])\r\n  return (\r\n    <Setting\r\n      title='Load original sizes'\r\n      description='Display images and videos at their original resolution. This will consume more data but provides a nicer experience.'\r\n    >\r\n      <Toggle value={originals} onToggle={toggleOriginals} />\r\n    </Setting>\r\n  )\r\n}\r\n","import React, { useCallback } from 'react'\r\nimport usePreference from '../../hooks/usePreference'\r\nimport Setting from '../designsystem/Setting'\r\nimport Toggle from '../designsystem/Toggle'\r\n\r\nexport default function PrefMetadata() {\r\n  const [showMetadata, setShowMetadata] = usePreference('showMetadata')\r\n  const toggleShowMetadata = useCallback(() => setShowMetadata(!showMetadata), [showMetadata, setShowMetadata])\r\n\r\n  return (\r\n    <Setting\r\n      title='Show post metadata'\r\n      description=\"Posts display more data in their details. Mainly for developing purposes but maybe it's useful to someone.\"\r\n    >\r\n      <Toggle value={showMetadata} onToggle={toggleShowMetadata} />\r\n    </Setting>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport usePreference from '../../hooks/usePreference'\r\nimport Setting from '../designsystem/Setting'\r\nimport { SmallNumberInput } from '../designsystem/SmallInput'\r\n\r\nexport default function PrefPageSize() {\r\n  const [pageSize, setPageSize] = usePreference('pageSize')\r\n\r\n  return (\r\n    <Setting title='Page size' description='Controls the number of posts loaded at once.'>\r\n      <SmallNumberInput value={pageSize} onSubmit={setPageSize} min={10} max={200} step={1} />\r\n    </Setting>\r\n  )\r\n}\r\n","import React, { useCallback } from 'react'\r\nimport usePreference from '../../hooks/usePreference'\r\nimport Setting from '../designsystem/Setting'\r\nimport Toggle from '../designsystem/Toggle'\r\n\r\nexport default function PrefPreloadVideos() {\r\n  const [preloadVideos, setPreloadVideos] = usePreference('preloadVideos')\r\n  const togglePreloadVideos = useCallback(() => setPreloadVideos(!preloadVideos), [preloadVideos, setPreloadVideos])\r\n\r\n  return (\r\n    <Setting\r\n      title='Preload Animations'\r\n      description='Start loading videos and gifs immediately instead of when you click play. This will improve your viewing experience but will consume a LOT of data. Only use with WIFI.'\r\n    >\r\n      <Toggle value={preloadVideos} onToggle={togglePreloadVideos} />\r\n    </Setting>\r\n  )\r\n}\r\n","import React, { useCallback } from 'react'\r\nimport { ResultsLayout } from 'r34-types'\r\nimport usePreference from '../../hooks/usePreference'\r\nimport Select from '../designsystem/Select'\r\nimport Setting from '../designsystem/Setting'\r\n\r\nconst layouts: Record<ResultsLayout, string> = {\r\n  infinite_column: 'Infinite',\r\n  pages: 'Pages',\r\n}\r\n\r\nexport default function PrefResultsLayout() {\r\n  const [resultsLayout, setResultsLayout] = usePreference('resultsLayout')\r\n  const onChangeResultsLayout = useCallback((event) => setResultsLayout(event.target.value), [setResultsLayout])\r\n\r\n  return (\r\n    <Setting title='Results Layout' description='Choose how your results are displayed.'>\r\n      <Select options={layouts} value={resultsLayout} onChange={onChangeResultsLayout} />\r\n    </Setting>\r\n  )\r\n}\r\n","import React, { useCallback } from 'react'\r\nimport usePreference from '../../hooks/usePreference'\r\nimport Setting from '../designsystem/Setting'\r\nimport Toggle from '../designsystem/Toggle'\r\n\r\nexport default function PrefShowComments() {\r\n  const [showComments, setShowComments] = usePreference('showComments')\r\n  const toggleShowComments = useCallback(() => setShowComments(!showComments), [showComments, setShowComments])\r\n\r\n  return (\r\n    <Setting\r\n      title='Show comments'\r\n      description=\"If there are comments on a post, they will appear in the details. They can be a bit weird though, that's why they are disabled by default.\"\r\n    >\r\n      <Toggle value={showComments} onToggle={toggleShowComments} />\r\n    </Setting>\r\n  )\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport useToggle from '../../hooks/useToggle'\r\nimport { CloseIcon, ShareIcon, SupertagIcon } from '../../icons/FontAwesomeIcons'\r\nimport TagList from '../tag/TagList'\r\nimport TagSelector from '../tagSelector/TagSelector'\r\nimport { Faded } from './Text'\r\nimport * as r34 from 'r34-types'\r\nimport { useSupertag } from '../../hooks/useSupertag'\r\nimport { Link } from 'react-router-dom'\r\nimport { RouteName } from '../../data/types'\r\nimport { encodeSupertag, isSupertag } from '../../data/tagUtils'\r\nimport { InvisButton } from './Buttons'\r\nimport { flexColumnWithGap, gridWithGap } from '../../styled/mixins/layout'\r\n\r\nconst Wrapper = styled.div(\r\n  ({ theme }) => css`\r\n    ${flexColumnWithGap}\r\n\r\n    padding-block: ${theme.dimensions.bigSpacing};\r\n\r\n    :not(:last-child) {\r\n      border-bottom: solid gray 1px;\r\n    }\r\n\r\n    :active {\r\n      background: ${theme.colors.layerBgHighlight};\r\n    }\r\n  `\r\n)\r\n\r\nconst Row = styled.div`\r\n  ${gridWithGap}\r\n  grid-template-columns: auto auto 1fr auto auto;\r\n  grid-template-rows: 1fr auto;\r\n  align-items: center;\r\n  cursor: pointer;\r\n\r\n  > :first-child {\r\n    place-items: center;\r\n    grid-area: 1/1/3/2;\r\n  }\r\n  > :nth-child(2) {\r\n    grid-area: 1/2/2/3;\r\n  }\r\n  > :nth-child(3) {\r\n    grid-area: 1/3/2/4;\r\n  }\r\n  > :nth-child(4) {\r\n    grid-area: 2/2/3/4;\r\n  }\r\n  > :nth-child(5) {\r\n    grid-area: 1/4/3/5;\r\n  }\r\n  > :nth-child(6) {\r\n    grid-area: 1/6/3/6;\r\n  }\r\n`\r\n\r\nconst LinkButton = styled(Link)(\r\n  ({ theme }) => css`\r\n    padding: ${theme.dimensions.bigSpacing};\r\n    cursor: pointer;\r\n    color: ${theme.colors.text};\r\n  `\r\n)\r\n\r\ninterface SupertagEntryProps {\r\n  supertag: r34.Supertag\r\n}\r\n\r\nexport default function SupertagEntry(props: SupertagEntryProps) {\r\n  const { supertag } = props\r\n  const { name, description, tags } = supertag\r\n\r\n  const [isOpen, toggleOpen] = useToggle()\r\n  const [addTag, removeTag, deleteSupertag] = useSupertag(supertag)\r\n\r\n  const tagObjects = useMemo(\r\n    () =>\r\n      Object.entries(tags).reduce((result, [name, modifier]) => {\r\n        result[name] = { name, modifier, types: [] }\r\n        return result\r\n      }, {} as Record<string, Omit<r34.BiasedTag, 'count'>>),\r\n    [tags]\r\n  )\r\n\r\n  const handleRemove = React.useCallback(\r\n    (event) => {\r\n      event.stopPropagation()\r\n      event.preventDefault()\r\n      deleteSupertag()\r\n    },\r\n    [deleteSupertag]\r\n  )\r\n\r\n  const onTagMenu = React.useCallback(\r\n    (tag: r34.AnyBiasedTag) => {\r\n      if (!isSupertag(tag)) {\r\n        const order: r34.TagModifier[] = ['+', '-', '~']\r\n        const nextModifer = order[(order.indexOf(tag.modifier) + 1) % 3]\r\n        addTag({ ...tag, modifier: nextModifer })\r\n      }\r\n    },\r\n    [addTag]\r\n  )\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Row onClick={toggleOpen} title='Open supertag details'>\r\n        <SupertagIcon />\r\n        <span>{name}</span>\r\n        <Faded>{Object.keys(tags).length} tags</Faded>\r\n        <Faded>{description}</Faded>\r\n        <LinkButton to={`${RouteName.SHARE}?${encodeSupertag(supertag)}`} title='Share supertag'>\r\n          <ShareIcon />\r\n        </LinkButton>\r\n        <InvisButton onClick={handleRemove} title='Delete supertag'>\r\n          <CloseIcon />\r\n        </InvisButton>\r\n      </Row>\r\n\r\n      {isOpen && (\r\n        <>\r\n          <TagSelector onSubmit={addTag} showSupertags={false} />\r\n          <TagList tags={tagObjects} detailed={false} onTagClick={removeTag} onTagMenu={onTagMenu}></TagList>\r\n        </>\r\n      )}\r\n    </Wrapper>\r\n  )\r\n}\r\n","import { useCallback } from 'react'\r\nimport { removeSupertag, setTagsOfSupertag } from '../firebase'\r\nimport * as r34 from 'r34-types'\r\n\r\nexport const useSupertag = (supertag: r34.Supertag) => {\r\n  const addTag = useCallback(\r\n    (newTag: r34.AnyBiasedTag) => {\r\n      const tag = newTag as r34.BiasedTag\r\n      const newTags = { ...supertag.tags, [tag.name]: tag.modifier }\r\n      setTagsOfSupertag(supertag.name, newTags)\r\n    },\r\n    [supertag.name, supertag.tags]\r\n  )\r\n  const removeTag = useCallback(\r\n    (tag: r34.AnyTag) => {\r\n      const newTags = { ...supertag.tags }\r\n      delete newTags[tag.name]\r\n      setTagsOfSupertag(supertag.name, newTags)\r\n    },\r\n    [supertag.name, supertag.tags]\r\n  )\r\n  const deleteSupertag = useCallback(() => removeSupertag(supertag.name), [supertag.name])\r\n\r\n  return [addTag, removeTag, deleteSupertag] as const\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { ModalId } from '../../data/types'\r\nimport { useSupertags } from '../../hooks/useSupertags'\r\nimport { PlusIcon } from '../../icons/FontAwesomeIcons'\r\nimport { openModal } from '../../redux/actions'\r\nimport { PrimaryButton } from '../designsystem/Buttons'\r\nimport Setting from '../designsystem/Setting'\r\nimport SupertagEntry from '../designsystem/SupertagEntry'\r\n\r\nexport default function PrefSupertags() {\r\n  const supertags = useSupertags()\r\n\r\n  const dispatch = useDispatch()\r\n  const openSupertagModal = React.useCallback(() => dispatch(openModal(ModalId.CREATE_SUPERTAG)), [dispatch])\r\n\r\n  return (\r\n    <>\r\n      <Setting\r\n        title='Supertags'\r\n        description='You can manage your supertags here. To create on sign in and try adding two or more tags to your search. Adding supertag to your search will add all the tags inside instead.'\r\n      >\r\n        <PrimaryButton onClick={openSupertagModal}>\r\n          <PlusIcon /> Add new\r\n        </PrimaryButton>\r\n      </Setting>\r\n      <div>\r\n        {Object.entries(supertags).map(([name, details]) => (\r\n          <SupertagEntry key={name} supertag={{ name, ...details }}></SupertagEntry>\r\n        ))}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport usePreference from '../../hooks/usePreference'\r\nimport Setting from '../designsystem/Setting'\r\nimport { SmallNumberInput } from '../designsystem/SmallInput'\r\n\r\nexport default function PrefTagSuggestions() {\r\n  const [tagSuggestionsCount, setTagSuggestionsCount] = usePreference('tagSuggestionsCount')\r\n\r\n  return (\r\n    <Setting\r\n      title='Number of Tag suggestions'\r\n      description='Controls the number of tags displayed when searching. Increase this when searching for niche tags.'\r\n    >\r\n      <SmallNumberInput value={tagSuggestionsCount} onSubmit={setTagSuggestionsCount} min={3} max={200} step={1} />\r\n    </Setting>\r\n  )\r\n}\r\n","import React, { useCallback } from 'react'\r\nimport { ThemeId } from 'r34-types'\r\nimport usePreference from '../../hooks/usePreference'\r\nimport Select from '../designsystem/Select'\r\nimport Setting from '../designsystem/Setting'\r\n\r\nconst themes: Record<ThemeId, string> = {\r\n  dark: 'Dark',\r\n  light: 'Light',\r\n  coffee: 'Coffee',\r\n  deepsea: 'Deep Sea',\r\n}\r\n\r\nexport default function PrefTheme() {\r\n  const [themeId, setThemeId] = usePreference('themeId')\r\n  const changeTheme = useCallback((event) => setThemeId(event.target.value), [setThemeId])\r\n\r\n  return (\r\n    <Setting title='Theme' description='Choose how the app looks.'>\r\n      <Select options={themes} value={themeId} onChange={changeTheme} />\r\n    </Setting>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { FailedIcon, SuccessIcon } from '../../icons/FontAwesomeIcons'\r\n\r\nconst Positive = styled(SuccessIcon).attrs((props) => ({\r\n  color: props.theme.colors.positive,\r\n}))``\r\n\r\nconst Negative = styled(FailedIcon).attrs((props) => ({\r\n  color: props.theme.colors.negative,\r\n}))``\r\n\r\ntype StatusImageProps = {\r\n  value: boolean\r\n}\r\n\r\nexport default function StatusImage(props: StatusImageProps) {\r\n  return props.value ? <Positive /> : <Negative />\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {\r\n  supportsAspectRatio,\r\n  supportsFlexGap,\r\n  supportsFullscreen,\r\n  supportsGap,\r\n  supportsLocalStorage,\r\n  supportsNetworkInformationAPI,\r\n  supportsObjectFit,\r\n} from '../../data/browserUtils'\r\nimport { defaultSpacing } from '../../styled/mixins/gap'\r\nimport { flexColumnWithGap } from '../../styled/mixins/layout'\r\nimport { borderRadius } from '../../styled/mixins/theming'\r\nimport StatusImage from '../designsystem/StatusImage'\r\nimport { SmallTitle, Faded } from '../designsystem/Text'\r\n\r\nconst Wrapper = styled.div`\r\n  ${flexColumnWithGap}\r\n`\r\n\r\nconst FeatureList = styled.div`\r\n  ${flexColumnWithGap}\r\n  ${defaultSpacing}\r\n  ${borderRadius}\r\n  background: ${(props) => props.theme.colors.backgroundColor};\r\n`\r\n\r\nexport default function FeatureDetection() {\r\n  return (\r\n    <Wrapper>\r\n      <SmallTitle>Feature Detection</SmallTitle>\r\n      <Faded>This information is really valuable when investigating layout and browser issues.</Faded>\r\n      <FeatureList>\r\n        <Faded>\r\n          <StatusImage value={supportsGap} /> Supports grid-gap\r\n        </Faded>\r\n        <Faded>\r\n          <StatusImage value={supportsFlexGap} /> Supports flex-gap\r\n        </Faded>\r\n        <Faded>\r\n          <StatusImage value={supportsAspectRatio} /> Supports aspect-ratio\r\n        </Faded>\r\n        <Faded>\r\n          <StatusImage value={supportsObjectFit} /> Supports object-fit\r\n        </Faded>\r\n        <Faded>\r\n          <StatusImage value={supportsFullscreen} /> Supports fullscreen\r\n        </Faded>\r\n        <Faded>\r\n          <StatusImage value={supportsNetworkInformationAPI} /> Supports advanced network info\r\n        </Faded>\r\n        <Faded>\r\n          <StatusImage value={supportsLocalStorage} /> Supports localStorage\r\n        </Faded>\r\n      </FeatureList>\r\n    </Wrapper>\r\n  )\r\n}\r\n","import React, { useCallback } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { UndoIcon } from '../../icons/FontAwesomeIcons'\r\nimport { setPosts } from '../../redux/actions'\r\nimport { BlockButton } from '../designsystem/Buttons'\r\n\r\nexport default function ResetResultsButton() {\r\n  const dispatch = useDispatch()\r\n\r\n  const handleClick = useCallback(() => dispatch(setPosts([], 0, 0)), [dispatch])\r\n\r\n  return (\r\n    <BlockButton onClick={handleClick}>\r\n      <UndoIcon /> Reset Results\r\n    </BlockButton>\r\n  )\r\n}\r\n","import React, { useCallback } from 'react'\r\nimport { resetSeenPosts } from '../../firebase'\r\nimport { UndoIcon } from '../../icons/FontAwesomeIcons'\r\nimport { BlockButton } from '../designsystem/Buttons'\r\n\r\nexport default function ResetSeenPostsButton() {\r\n  const onResetSeenPosts = useCallback(resetSeenPosts, [])\r\n\r\n  return (\r\n    <BlockButton onClick={onResetSeenPosts}>\r\n      <UndoIcon /> Reset seen posts\r\n    </BlockButton>\r\n  )\r\n}\r\n","import styled, { useTheme } from 'styled-components'\r\nimport { getVersionString } from '../../data/utils'\r\nimport useFirebaseAuthState from '../../hooks/useFirebaseAuthState'\r\nimport { usePageTitle } from '../../hooks/usePageTitle'\r\nimport { CodeBranchIcon } from '../../icons/FontAwesomeIcons'\r\nimport { flexRowWithGap } from '../../styled/mixins/layout'\r\nimport { DefaultPageColumn } from '../designsystem/DefaultPageColumn'\r\nimport { FlexColumn } from '../designsystem/FlexColumn'\r\nimport { HorizontalLine } from '../designsystem/Lines'\r\nimport { Faded } from '../designsystem/Text'\r\nimport TitledSurface from '../designsystem/TitledSurface'\r\nimport Header from '../features/Header'\r\nimport PrefAccount from '../preferences/PrefAccount'\r\nimport PrefAutoPlay from '../preferences/PrefAutoPlay'\r\nimport PrefAutoscrollDelay from '../preferences/PrefAutoscrollDelay'\r\nimport PrefHideSeenPosts from '../preferences/PrefHideSeenPosts'\r\nimport PrefLoadOriginals from '../preferences/PrefLoadOriginals'\r\nimport PrefMetadata from '../preferences/PrefMetadata'\r\nimport PrefPageSize from '../preferences/PrefPageSize'\r\nimport PrefPreloadVideos from '../preferences/PrefPreloadVideos'\r\nimport PrefResultsLayout from '../preferences/PrefResultsLayout'\r\nimport PrefShowComments from '../preferences/PrefShowComments'\r\nimport PrefSupertags from '../preferences/PrefSupertags'\r\nimport PrefTagSuggestions from '../preferences/PrefTagSuggestions'\r\nimport PrefTheme from '../preferences/PrefTheme'\r\nimport FeatureDetection from '../widgets/FeatureDetection'\r\nimport ResetButton from '../widgets/ResetButton'\r\nimport ResetResultsButton from '../widgets/ResetResultsButton'\r\nimport ResetSeenPostsButton from '../widgets/ResetSeenPostsButton'\r\n\r\nconst VersionWrapper = styled.div`\r\n  ${flexRowWithGap}\r\n  flex-grow: 1;\r\n  justify-content: center;\r\n  min-height: 50px;\r\n`\r\n\r\nexport default function Preferences() {\r\n  const theme = useTheme()\r\n  const versionString = getVersionString()\r\n  const [isSignedIn] = useFirebaseAuthState()\r\n\r\n  usePageTitle('Rule34 React - Preferences')\r\n\r\n  return (\r\n    <FlexColumn>\r\n      <Header />\r\n      <DefaultPageColumn>\r\n        <TitledSurface title='General'>\r\n          <PrefResultsLayout />\r\n          <PrefPreloadVideos />\r\n          <PrefLoadOriginals />\r\n          <PrefTagSuggestions />\r\n          <PrefPageSize />\r\n          <PrefShowComments />\r\n        </TitledSurface>\r\n\r\n        <TitledSurface title='Account'>\r\n          <PrefAccount />\r\n          <PrefTheme />\r\n          {isSignedIn && (\r\n            <>\r\n              <PrefSupertags />\r\n              <PrefHideSeenPosts />\r\n            </>\r\n          )}\r\n        </TitledSurface>\r\n\r\n        <TitledSurface title='Experimental'>\r\n          <Faded>\r\n            These features that are still under active development. They might change a lot in the future. Please report\r\n            any bugs you find so I can fix them :)\r\n          </Faded>\r\n          <HorizontalLine />\r\n          <PrefAutoPlay />\r\n          <PrefAutoscrollDelay />\r\n        </TitledSurface>\r\n        <TitledSurface title='Developer'>\r\n          <PrefMetadata />\r\n          <FeatureDetection />\r\n          <ResetResultsButton />\r\n          <ResetSeenPostsButton />\r\n          <ResetButton />\r\n        </TitledSurface>\r\n\r\n        <VersionWrapper>\r\n          <CodeBranchIcon color={theme.colors.subduedText} />\r\n          <Faded>{versionString}</Faded>\r\n        </VersionWrapper>\r\n      </DefaultPageColumn>\r\n    </FlexColumn>\r\n  )\r\n}\r\n"],"sourceRoot":""}